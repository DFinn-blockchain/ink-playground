// AUTO-GENERATED by typescript-type-def

export default types;
export namespace types {
  export type U8 = number;
  export type CompilationResult =
    | { type: 'SUCCESS'; payload: { wasm: types.U8[]; stdout: string; stderr: string } }
    | { type: 'ERROR'; payload: { stdout: string; stderr: string } };
  export type CompilationRequest = { source: string };
  export type TestingRequest = { source: string };
  export type TestingResult =
    | { type: 'SUCCESS'; payload: { stdout: string; stderr: string } }
    | { type: 'ERROR'; payload: { stdout: string; stderr: string } };
  export type FormattingRequest = { source: string };
  export type FormattingResult =
    | { type: 'SUCCESS'; payload: { source: string; stderr: string } }
    | { type: 'ERROR'; payload: { stdout: string; stderr: string } };
  export type Gist = { id: string; url: string; code: string };
  export type GistLoadRequest = { id: string };
  export type GistLoadResponse =
    | { type: 'SUCCESS'; payload: types.Gist }
    | { type: 'ERROR'; payload: string };
  export type GistCreateRequest = { code: string };
  export type GistCreateResponse =
    | { type: 'SUCCESS'; payload: types.Gist }
    | { type: 'ERROR'; payload: string };
}
